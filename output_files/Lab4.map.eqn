-- Copyright (C) 2018  Intel Corporation. All rights reserved.
-- Your use of Intel Corporation's design tools, logic functions 
-- and other software and tools, and its AMPP partner logic 
-- functions, and any output files from any of the foregoing 
-- (including device programming or simulation files), and any 
-- associated documentation or information are expressly subject 
-- to the terms and conditions of the Intel Program License 
-- Subscription Agreement, the Intel Quartus Prime License Agreement,
-- the Intel FPGA IP License Agreement, or other applicable license
-- agreement, including, without limitation, that your use is for
-- the sole purpose of programming logic devices manufactured by
-- Intel and sold by Intel or its authorized distributors.  Please
-- refer to the applicable agreement for further details.
--hex_disp_case[0] is hex_disp_case[0]
hex_disp_case[0] = OUTPUT(A1L24);


--hex_disp_case[1] is hex_disp_case[1]
hex_disp_case[1] = OUTPUT(A1L23);


--hex_disp_case[2] is hex_disp_case[2]
hex_disp_case[2] = OUTPUT(A1L21);


--hex_disp_case[3] is hex_disp_case[3]
hex_disp_case[3] = OUTPUT(A1L24);


--hex_disp_case[4] is hex_disp_case[4]
hex_disp_case[4] = OUTPUT(A1L20);


--hex_disp_case[5] is hex_disp_case[5]
hex_disp_case[5] = OUTPUT(A1L18);


--hex_disp_case[6] is hex_disp_case[6]
hex_disp_case[6] = OUTPUT(A1L17);


--hex_disp_if[0] is hex_disp_if[0]
hex_disp_if[0] = OUTPUT(A1L24);


--hex_disp_if[1] is hex_disp_if[1]
hex_disp_if[1] = OUTPUT(A1L23);


--hex_disp_if[2] is hex_disp_if[2]
hex_disp_if[2] = OUTPUT(A1L21);


--hex_disp_if[3] is hex_disp_if[3]
hex_disp_if[3] = OUTPUT(A1L24);


--hex_disp_if[4] is hex_disp_if[4]
hex_disp_if[4] = OUTPUT(A1L26);


--hex_disp_if[5] is hex_disp_if[5]
hex_disp_if[5] = OUTPUT(A1L18);


--hex_disp_if[6] is hex_disp_if[6]
hex_disp_if[6] = OUTPUT(A1L17);


--w is w
w = INPUT();


--z is z
z = INPUT();


--y is y
y = INPUT();


--x is x
x = INPUT();


--A1L24 is Mux6~0
A1L24 = (!w & (x & ((y) # (z)))) # (w & (((x)) # (z)));


--A1L22 is Mux5~0
A1L22 = (!w & ((!y & (z)) # (y & ((!x))))) # (w & ((!x & (!z)) # (x & ((!y)))));


--A1L21 is Mux4~0
A1L21 = (!x & (z & ((y) # (w)))) # (x & (((y))));


--A1L19 is Mux2~0
A1L19 = (!z & (!y & (!w $ (!x)))) # (z & (!w & ((!x))));


--A1L18 is Mux1~0
A1L18 = ((w & (z & !x))) # (y);


--A1L17 is Mux0~0
A1L17 = (!y & (w & (!z & !x))) # (y & (((x))));


--A1L25 is output_if~0
A1L25 = (!z & (!y & (!x $ (!w)))) # (z & (!x & ((!w))));


--A1L20 is Mux2~0_wirecell
A1L20 = !A1L19;


--A1L23 is Mux5~0_wirecell
A1L23 = !A1L22;


--A1L26 is output_if~0_wirecell
A1L26 = !A1L25;


